package io.github.picodotdev.blogbitix.javaprocess

import java.io.BufferedReader
import java.io.InputStreamReader
import java.math.BigDecimal
import java.text.MessageFormat
import java.util.concurrent.TimeUnit
import java.util.stream.Collectors
//import java.io.BufferedReader

object Main {
  @JvmStatic
   fun main(args: Array<String>) {
       // Iniciar el proceso
       val builder = ProcessBuilder().command("tput cols", "")
       val process = builder.start()

       // Alternativa a ProcessBuilder
       //Process process = Runtime.getRuntime().exec(new String[] { "cat", "/proc/uptime" });

       // Esperar a que termine el proceso y obtener su valor de salida
       process.waitFor(10, TimeUnit.SECONDS)
       val value = process.exitValue()
       if (value != 0) {
           throw Exception(MessageFormat.format("CÃ³digo de salida con error (%d)", value))
       }

       // Obtener la salida del proceso
       val br = BufferedReader(InputStreamReader(process.inputStream, "UTF-8"))
       val result = br.lines().collect(Collectors.joining("\n"))
       br.close()

       // Obtener el tiempo desde el inicio del sistema

       System.out.printf("Columnes", result)
   }
}
